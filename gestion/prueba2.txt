import sys
from PyQt5.QtWidgets import QApplication, QMainWindow, QWidget, QVBoxLayout, QPushButton, QLineEdit, QLabel, QTableWidget, QTableWidgetItem, QMessageBox


class LoginWindow(QWidget):
    def __init__(self):
        super().__init__()
        self.init_ui()

    def init_ui(self):
        self.setWindowTitle('Login')
        self.setGeometry(100, 100, 400, 200)
        self.setFixedSize(400, 200)

        layout = QVBoxLayout()

        self.user_label = QLabel('Usuario:')
        self.user_entry = QLineEdit()
        layout.addWidget(self.user_label)
        layout.addWidget(self.user_entry)

        self.pass_label = QLabel('Contraseña:')
        self.pass_entry = QLineEdit()
        self.pass_entry.setEchoMode(QLineEdit.Password)
        layout.addWidget(self.pass_label)
        layout.addWidget(self.pass_entry)

        self.login_button = QPushButton('Login')
        self.login_button.clicked.connect(self.login)
        layout.addWidget(self.login_button)

        self.setLayout(layout)

    def login(self):
        if self.user_entry.text() == 'admin' and self.pass_entry.text() == 'admin':
            self.close()
            self.main_window = MainWindow()
            self.main_window.show()
        else:
            QMessageBox.critical(self, 'Error de autenticación', 'Usuario o contraseña incorrectos')


class MainWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        self.init_ui()
        self.table_windows = []  # Lista para mantener referencias a las ventanas de tablas

    def init_ui(self):
        self.setWindowTitle('Menú Principal')
        self.setGeometry(100, 100, 300, 400)
        self.setFixedSize(300, 400)

        central_widget = QWidget()
        self.setCentralWidget(central_widget)
        layout = QVBoxLayout()

        buttons = [
            ('Cliente', self.show_cliente),
            ('Proveedor', self.show_proveedor),
            ('Empleado', self.show_empleado),
            ('Producto', self.show_producto),
            ('Orden Pedido', self.show_orden_pedido),
            ('Orden Venta', self.show_orden_venta),
            ('Cerrar Sesión', self.close)
        ]

        for text, func in buttons:
            button = QPushButton(text)
            button.clicked.connect(func)
            layout.addWidget(button)

        central_widget.setLayout(layout)

    def show_table(self, columns, data):
        table_window = QWidget()
        table_window.setWindowTitle('Tabla de Datos')
        table_window.setGeometry(100, 100, 600, 400)

        layout = QVBoxLayout()

        table = QTableWidget()
        table.setRowCount(len(data))
        table.setColumnCount(len(columns))
        table.setHorizontalHeaderLabels(columns)

        for row_idx, row_data in enumerate(data):
            for col_idx, item in enumerate(row_data):
                table.setItem(row_idx, col_idx, QTableWidgetItem(item))

        layout.addWidget(table)
        close_button = QPushButton('Cerrar')
        close_button.clicked.connect(table_window.close)
        layout.addWidget(close_button)

        table_window.setLayout(layout)
        table_window.show()

        self.table_windows.append(table_window)  # Mantener una referencia a la ventana

    def show_cliente(self):
        columns = ["Nombres", "Apellidos", "DNI", "Dirección", "Celular", "Correo"]
        data = []  # Aquí puedes agregar datos de ejemplo o reales
        self.show_table(columns, data)

    def show_proveedor(self):
        columns = ["Nombre", "Dirección", "RUC"]
        data = []  # Aquí puedes agregar datos de ejemplo o reales
        self.show_table(columns, data)

    def show_empleado(self):
        columns = ["Nombres", "Apellidos", "DNI", "Dirección", "Celular", "Correo"]
        data = []  # Aquí puedes agregar datos de ejemplo o reales
        self.show_table(columns, data)

    def show_producto(self):
        columns = ["Marca", "Código Referencia", "Tipo de Transacción", "Punto Reorden", "Precio", "Cantidad", "Fecha"]
        data = []  # Aquí puedes agregar datos de ejemplo o reales
        self.show_table(columns, data)

    def show_orden_pedido(self):
        columns = ["DNI", "Código de Producto", "Cantidad de Pedido", "Fecha"]
        data = []  # Aquí puedes agregar datos de ejemplo o reales
        self.show_table(columns, data)

    def show_orden_venta(self):
        columns = ["RUC", "Código de Producto", "Código de Venta", "Cantidad Pedido", "Fecha Pedido", "Fecha Entrega"]
        data = []  # Aquí puedes agregar datos de ejemplo o reales
        self.show_table(columns, data)


def main():
    app = QApplication(sys.argv)
    login_window = LoginWindow()
    login_window.show()
    sys.exit(app.exec_())


if __name__ == '__main__':
    main()
